language: erlang

otp_release:
 - 18.0
 - 17.1

sudo: false

env:
 - TASK=acceptance-basic-tests
 - TASK=lint
 - TASK=dialyzer
 - TASK=unit-tests
 - TASK=development-with-rsync
 - TASK=http-worker-tests
 - TASK=validate-examples
 - TASK=error-messages
 - TASK=dashboard-tests
 - TASK=acceptance-local-tests
 - TASK=acceptance-migrations-tests

addons:
  apt:
    packages:
      - python-virtualenv
      - parallel
      - nodejs
      - npm

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.cache/rebar3

script:
 - virtualenv venv
 - source venv/bin/activate
 - ./bin/rebar3 update
 - export PROJECTS="node server common_apps/mzbench_language common_apps/mzbench_utils";
 - case "$TASK" in
     lint) pip install pyflakes && ./bin/lint.py . ;;
     validate-examples) pip install -r requirements.txt && make -C examples check;;
     error-messages) pip install -r requirements.txt && make -C acceptance_tests/invalid_scripts check;;
     dashboard-tests) pip install -r requirements.txt &&
                      cd server/dashboard && npm install &&
                      ../../bin/mzbench start_server && node test/start.js;;
     http-worker-tests) pip install -r requirements.txt &&
                       export NODE_COMMIT=`git rev-parse HEAD` &&
                       export MZBENCH_REPO=`pwd` &&
                       cd workers/http &&
                       make && make check-local;;
     acceptance-*-tests) pip install -r requirements.txt &&
                       pip install -r acceptance_tests/requirements.txt &&
                       parallel -j2 --arg-sep ,, ,, "make -C" ,, "server generate" "node local_tgz"  &&
                       export NODE_COMMIT=`git rev-parse HEAD` &&
                       export MZBENCH_REPO=`pwd` &&
                       cd acceptance_tests &&
                       make ${TASK/acceptance-/};;
     development-with-rsync) pip install -r requirements.txt &&
                       pip install -r acceptance_tests/requirements.txt &&
                       parallel -j2 --arg-sep ,, ,, "make -C" ,, node server ,, generate &&
                       export MZBENCH_RSYNC=$PWD/ &&
                       rm node/Makefile &&
                       make -C acceptance_tests quick-test >/dev/null; [ $? -ne 0 ] &&
                       git checkout -- node/Makefile &&
                       make -C acceptance_tests quick-test;;
     unit-tests) parallel -j4 --arg-sep ,, ,, "make -C" ,, $PROJECTS ,, test-unit ;;
     dialyzer) parallel -j4 --arg-sep ,, ,, "make -C" ,, $PROJECTS ,, dialyzer.log ;;
   esac
